; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define MyAppName "DWM Monitor"
#define MyAppVersion "1.5"
#define MyAppPublisher "ISV, Inc."
#define MyAppURL "https://www.isv-tech.com/"

[Setup]
; NOTE: The value of AppId uniquely identifies this application. Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={{B1DC994A-A51B-4EB8-BF80-759BD78EB736}
AppName={#MyAppName}
AppVersion={#MyAppVersion}
;AppVerName={#MyAppName} {#MyAppVersion}
;AppPublisher={#MyAppPublisher}
;AppPublisherURL={#MyAppURL}
;AppSupportURL={#MyAppURL}
;AppUpdatesURL={#MyAppURL}
;CreateAppDir=no
DefaultDirName={autopf}\{#MyAppName}
UninstallDisplayIcon={app}\MyProg.exe
DefaultGroupName={#MyAppName}
; Uncomment the following line to run in non administrative install mode (install for current user only.)
;PrivilegesRequired=lowest
OutputBaseFilename=DWMMonitorSetup
Compression=lzma
SolidCompression=yes
WizardStyle=modern
OutputDir=.
PrivilegesRequired=admin
[files]
Source: "check_restart_dwm.exe"; DestDir: "{app}"
[Code]
function InitializeSetup(): Boolean;
var
  ResultCode: Integer;
  UserChoice: Integer;
begin
  Result := True;
  if not FileExists(ExpandConstant('{sys}\sc.exe')) then
  begin
    MsgBox('This installer requires the Windows Service Control Manager, which was not found on your system. Please ensure you are running a supported version of Windows.', mbError, MB_OK);
    Result := False;
    Exit;
  end;
  // 检查程序是否已安装（通过检查服务是否存在）
  if Exec(ExpandConstant('{sys}\sc.exe'), 'query DWMMonitorService', '', SW_HIDE, ewWaitUntilTerminated, ResultCode) and (ResultCode = 0) then
  begin
    // 已安装，提示用户选择
    UserChoice := MsgBox('DWM Monitor is already installed. Do you want to uninstall the existing version first?', mbConfirmation, MB_YESNO);
    if UserChoice = IDYES then
    begin
      // 用户选择卸载，尝试停止现有的服务
      Exec(ExpandConstant('{sys}\sc.exe'), 'stop DWMMonitorService', '', SW_HIDE, ewWaitUntilTerminated, ResultCode);

      // 等待服务完全停止
      Sleep(2000);

      // 尝试删除现有的服务
      Exec(ExpandConstant('{sys}\sc.exe'), 'delete DWMMonitorService', '', SW_HIDE, ewWaitUntilTerminated, ResultCode);

      // 再次等待，确保服务被完全删除
      Sleep(1000);
    end
    else
    begin
      // 用户选择不卸载，取消安装
      Result := False;
    end;
  end;

end;
procedure CurUninstallStepChanged(CurUninstallStep: TUninstallStep);
var
  ResultCode: Integer;
begin
  if CurUninstallStep = usUninstall then
  begin
    // 停止服务
    Exec(ExpandConstant('{sys}\sc.exe'), 'stop DWMMonitorService', '', SW_HIDE, ewWaitUntilTerminated, ResultCode);
    
    // 给进程一些时间来完全停止
    Sleep(2000);
    
    // 删除服务
    Exec(ExpandConstant('{sys}\sc.exe'), 'delete DWMMonitorService', '', SW_HIDE, ewWaitUntilTerminated, ResultCode);
    
    // 再次等待，确保服务被完全删除
    Sleep(1000);
  end;
end;


[Run]
Filename: {sys}\sc.exe; Parameters: "create DWMMonitorService binPath= ""{app}\check_restart_dwm.exe"" start= auto"; Flags: runhidden
Filename: {sys}\sc.exe; Parameters: "description DWMMonitorService ""Monitors and restarts DWM if memory usage exceeds threshold"""; Flags: runhidden
Filename: {sys}\sc.exe; Parameters: "start DWMMonitorService"; Flags: runhidden
[UninstallDelete]
Type: files; Name: "{app}\check_restart_dwm.exe"
[Languages]
Name: "english"; MessagesFile: "compiler:Default.isl"
Name: "chinesesimplified"; MessagesFile: "compiler:Languages\ChineseSimplified.isl"

